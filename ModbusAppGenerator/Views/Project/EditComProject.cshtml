@model ModbusAppGenerator.ViewModels.ProjectViewModels.EditComProjectViewModel

@{
    ViewData["Title"] = "Edit Com Project";
}

<h2>Edit Com Project Settings</h2>

<div>
    @using (Html.BeginForm("EditComProject", "Project"))
    {
        @Html.AntiForgeryToken()
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        @Html.HiddenFor(m => m.Id)
        <div class="form-group">
            <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                @Html.TextBoxFor(m => m.Name, new { @class = "mdl-textfield__input", autocomplete = "off" })
                @Html.LabelFor(m => m.Name, new { @class = "mdl-textfield__label" })
            </div>
            <div>
                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                @Html.TextBoxFor(m => m.PortName, new { @class = "mdl-textfield__input", autocomplete = "off" })
                @Html.LabelFor(m => m.PortName, new { @class = "mdl-textfield__label" })
            </div>
            <div>
                @Html.ValidationMessageFor(m => m.PortName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                @Html.TextBoxFor(m => m.BaudRate, new { @class = "mdl-textfield__input", autocomplete = "off" })
                @Html.LabelFor(m => m.BaudRate, new { @class = "mdl-textfield__label" })
            </div>
            <div>
                @Html.ValidationMessageFor(m => m.BaudRate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                @Html.TextBoxFor(m => m.DataBits, new { @class = "mdl-textfield__input", autocomplete = "off" })
                @Html.LabelFor(m => m.DataBits, new { @class = "mdl-textfield__label" })
            </div>
            <div>
                @Html.ValidationMessageFor(m => m.DataBits, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label getmdl-select">
                @Html.TextBoxFor(m => m.Parity, new { @class = "mdl-textfield__input", autocomplete = "off", @readonly = "readonly", type = "text", value = "" })
                <input type="hidden" for="Parity" name="Parity" value="@((int)(Model.Parity.Value))">
                <i class="mdl-icon-toggle__label material-icons">keyboard_arrow_down</i>
                @Html.LabelFor(m => m.Parity, new { @class = "mdl-textfield__label" })
                <ul for="Parity" class="mdl-menu mdl-menu--bottom-left mdl-js-menu">
                    <li class="mdl-menu__item" data-val="0">None</li>
                    <li class="mdl-menu__item" data-val="1">Odd</li>
                    <li class="mdl-menu__item" data-val="2">Even</li>
                    <li class="mdl-menu__item" data-val="3">Mark</li>
                    <li class="mdl-menu__item" data-val="4">Space</li>
                </ul>
            </div>
            <div>
                @Html.ValidationMessageFor(m => m.Parity, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label getmdl-select">
                @Html.TextBoxFor(m => m.StopBits, new { @class = "mdl-textfield__input", autocomplete = "off", @readonly = "readonly", type = "text", value = "" })
                <input type="hidden" for="StopBits" name="StopBits" value="@((int)(Model.StopBits.Value))">
                <i class="mdl-icon-toggle__label material-icons">keyboard_arrow_down</i>
                @Html.LabelFor(m => m.StopBits, new { @class = "mdl-textfield__label" })
                <ul for="StopBits" class="mdl-menu mdl-menu--bottom-left mdl-js-menu">
                    <li class="mdl-menu__item" data-val="0">0</li>
                    <li class="mdl-menu__item" data-val="1">1</li>
                    <li class="mdl-menu__item" data-val="3">1.5</li>
                    <li class="mdl-menu__item" data-val="2">2</li>
                </ul>
            </div>
            <div>
                @Html.ValidationMessageFor(m => m.StopBits, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                @Html.TextAreaFor(m => m.Description, new { @class = "mdl-textfield__input", type = "text", rows = "3" })
                @Html.LabelFor(m => m.Description, new { @class = "mdl-textfield__label" })
            </div>
            <div>
                @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <input type="submit" value="Save" class="mdl-button mdl-js-button mdl-button--raised primary-button" />
        </div>
    }
</div>
